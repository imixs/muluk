FROM payara/server-full:5.201
#FROM payara/server-full:latest

# Imixs-JSF-Sample Version 1.0.2
MAINTAINER ralph.soika@imixs.com

# Setup configuration
#USER payara
#COPY ./src/docker/configuration/payara/postgresql-9.4.1212.jar /opt/payara/appserver/glassfish/domains/production/lib
#COPY ./src/docker/configuration/payara/domain.xml /opt/payara/appserver/glassfish/domains/production/config
#COPY ./src/docker/configuration/payara/keyfile /opt/payara/appserver/glassfish/domains/production/config 

USER root
#RUN chown payara:payara /opt/payara/appserver/glassfish/domains/production/config/keyfile
#USER payara

ENV PAYARA_ARGS --debug

# Copy sample application
COPY ./target/*.war $DEPLOY_DIR


FROM payara/server-full:5.201
#FROM payara/micro:5.201

# add configuration files
USER root

# Copy domain.xml
COPY ./docker/payara/configuration/payara5/domain.xml /opt/payara/appserver/glassfish/domains/production/config/
COPY ./docker/payara/configuration/keyfile /opt/payara/appserver/glassfish/domains/production/config/
# Deploy artefacts
COPY ./docker/payara/configuration/postgresql-42.2.5.jar /opt/payara/appserver/glassfish/domains/production/lib
COPY ./northern-europe-workflow-app/target/*.war /opt/payara/appserver/glassfish/domains/production/autodeploy

RUN chown -R payara:payara /opt/payara/appserver/glassfish/domains/production
USER payara
#WORKDIR ${PAYARA_HOME}/

# add lauch options
#CMD ["--addLibs","/opt/payara/config/postgresql-42.2.5.jar", "--deploymentDir", "/opt/payara/deployments", "--rootDir", "/opt/payara/config","--domainConfig", "/opt/payara/config/domain.xml"]